h1.  HaCK teh PLaNET

h2. Exposition

I live in a cooperative with 8 other people.  We share a Netflix queue. The only rule is

bq. Movies cannot be removed from the queue

We currently have 250 movies in our queue, down from 450 a year ago. We have 3 discs making the rounds, getting returned every couple of weeks.

What this means is that queue ordering is crucial. To have any hope of viewing a movie before one moves out one had better move that movie to the #1 position. Constantly.

h2. Rising Action

I wrote this script to monitor our Netflix queue and ensure that the movie I want to watch is still #1. It runs automatically every 10 minutes.

The script has places of goodness and places of hackery. Maybe you'll find it useful. I can only hope that we don't actually live together. Or maybe I'm hoping that we do...

h2. Features

* Specify your own private queue of movies. The script keeps the top movie in your private queue at the top of the Netflix queue.

* When your movie ships it is removed from your private queue, as well.

* Movies can be flagged as "ok to watch again," which will permit or prevent movies already in the rental history from being added to the queue. 

* When your private #1 movie's status changes, an email is sent to the PRIVATE_EMAIL_RECIPIENTS list. Everytime I get an email that Hackers was moved back to #1 I can't help but laugh with glee.

* When your #1 movie ships, a "y0Uve b33n p4wnd bY #1 F!rs1 in 1!ne" is sent to the PUBLIC_EMAIL_RECIPIENTS list. I want to give my housemates a chance to fight back.

* Logs are written to a file, "the_log", in the same directory as this code.

h2. Dependencies

h3. django

Django conveniently has simplejson and a nice send_mail interface. eit.

http://djangoproject.com

h2. Included External Libs

h3. oauth

python2.5 does not come with oauth, hence oauth.py is included

h3. pyflix

Netflix.py comes from the pyflix project

http://code.google.com/p/pyflix/

h2. Instruction for Installation and Running

h3. Checkout code from git repository

http://github.com/diN0bot/H-cK-teh-P-4N37-N-TF-1X--1/

h3. Get a NetFlix developer account

http://developer.netflix.com/docs/REST_API_Conventions#0_37461 

h3. Create two files inside repo directory:

*settings.py*

Past the following code into settings.py and specify the APP_NAME, API_KEY and API_SECRET appropriate for your developer account.

pre.. 
APP_NAME   = ''
API_KEY    = ''
API_SECRET = ''
CALLBACK   = ''

USER = {
        'request': {
                'key': '',
                'secret': ''
        },
        'access': {
                'key': '',
                'secret': ''
        }
}

PUBLIC_EMAIL_RECIPIENTS = ["abc@abc.abc",
                           "def@def.def"]

PRIVATE_EMAIL_RECIPIENTS = ["ghi@ghi.ghi"]

# directory containing this file
PROJECT_HOME= ""

# logs are written to PROJECT_HOME/the_log

p. *movies_i_want_to_watch*

List the titles of movies you want to watch, one title per line. For example

bq. Hackers
Pulp Fiction
Oliver!

h3. Run generate_user_keys.py

The generate_user_keys script generates settings.USER request and access values. Follow the instructions it provides.

bq. python generate_user_keys.py

h3. Run the script!!

bq. python make_me_number_one.py

I've added mine as a cron job on my server. Make sure to set appropriate environment variables at the top of the crontab. For example

bq. PYTHONPATH=/var/sites/H-cK-teh-P-4N37-N-TF-1X--1/
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
DJANGO_SETTINGS_MODULE=settings
# min (0-59)    hour (0-23)     day of month (1-31)     month (1-12)    day of week (0-6, 0=Sunday)
*/10        *       *       *       *       python /var/sites/H-cK-teh-P-4N37-N-TF-1X--1/make_me_number_one.py
